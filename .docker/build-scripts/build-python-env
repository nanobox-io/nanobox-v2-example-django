#!/bin/bash

# Install python and environment
# 
# Steps:
#   - Prepare env
#   - Detect dependencies
#   - Install packages
#   - Setup python
#   - Pip install
#   - Cleanup cruft

set -e

# ------------------------------------ Prepare env

# Ensure mysql client using latest patch level
sed -i '/mysqlclient==1.3.*/c\mysqlclient==1.3.13' requirements.txt

# ensure gunicorn is installed
if [[ `grep -v 'gunicorn' requirements.txt` ]]; then
  echo "gunicorn" >> requirements.txt
fi

# add whitenoise to serve static assets
if [[ `grep -v 'whitenoise' requirements.txt` ]]; then
  echo "whitenoise" >> requirements.txt
fi

# ------------------------------------ Detect Dependencies

# set the base packages
deps=(python3)
build_deps=(build-base python3-dev git)

# todo: comb through this list and determine which packages are needed
#       only for build and move to build_deps

# mysql
if [[ `grep -i 'MySQLdb\|mysqlclient\|MySQL-python' requirements.txt` ]]; then
  deps+=(mariadb-dev)
fi

# mssql
if [[ `grep -i 'pymssql' requirements.txt` ]]; then
  deps+=(freetds)
fi

# memcache
if [[ `grep -i 'memcache\|libmc' requirements.txt` ]]; then
  deps+=(libmemcached)
fi

# postgres
if [[ `grep -i 'psycopg2' requirements.txt` ]]; then
  deps+=(libpq)
  build_deps+=(postgresql-dev)
fi

# redis
if [[ `grep -i 'redis' requirements.txt` ]]; then
  deps+=(redis)
fi

# curl
if [[ `grep -i 'pycurl' requirements.txt` ]]; then
  deps+=(curl)
fi

# pillow
if [[ `grep -i 'pillow' requirements.txt` ]]; then
  deps+=(freetype-dev jpeg-dev libwebp-dev tiff-dev)
  deps+=(libpng-dev lcms2-dev openjpeg-dev zlib-dev)
fi

# boto3
if [[ `grep -i 'boto3' requirements.txt` ]]; then
  deps+=()
fi

# xmlsec
if [[ `grep -i 'xmlsec' requirements.txt` ]]; then
  deps+=(libxml2 libxslt xmlsec-dev pkgconf)
fi

# python3-saml
if [[ `grep -i 'python3-saml' requirements.txt` ]]; then
  deps+=(libxml2 libxslt xmlsec-dev pkgconf)
fi

# pygraphviz
if [[ `grep -i 'pygraphviz' requirements.txt` ]]; then
  deps+=(libxshmfence libva libvdpau llvm-dev graphviz)
fi

# scipy
if [[ `grep -i 'scipy' requirements.txt` ]]; then
  deps+=(openblas-dev lapack)
fi

# pgmagick
if [[ `grep -i 'pgmagick' requirements.txt` ]]; then
  deps+=(graphicsmagick pkgconf)
fi

# ------------------------------------ Install Packages

# install the final packages
if [[ ${#deps[@]} -gt 0 ]]; then
  apk add --no-cache ${deps[@]}
fi

# install the build packages
if [[ ${#build_deps[@]} -gt 0 ]]; then
  apk add --no-cache --virtual build-deps ${build_deps[@]}
fi

# ------------------------------------ Setup Python

# symlink python3 to python
ln -s /usr/bin/python3 /usr/bin/python  
# symlink pip3 to pip
ln -s /usr/bin/pip3 /usr/bin/pip

# make sure pip is up-to-date
pip install --upgrade pip

# ------------------------------------ Pip install

# install from the requirements.txt
pip install -r requirements.txt

# ------------------------------------ Cleanup

# rollback build dependencies
apk del build-deps

# cleanup unecessary cruft from python install
find / -type d -name __pycache__ -exec rm -r {} +
rm -r /usr/lib/python*/ensurepip
rm -r /usr/lib/python*/turtledemo
rm /usr/lib/python*/turtle.py
rm /usr/lib/python*/webbrowser.py
rm /usr/lib/python*/doctest.py
rm /usr/lib/python*/pydoc.py
